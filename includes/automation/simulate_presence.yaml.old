# # ############################################################
# # #
# # #  Automation Simulate Presence / Occupancy Simulation
# # #  Source: https://github.com/mertenats/Open-Home-Automation/blob/master/openhome/configuration/home_assistant/automation/automation_4a.yaml
# # # Cant Moved to automation.yaml as it does not support Automation Templating
# # ############################################################
#
# - alias: Simulate Presence
#   trigger:
#     - platform: state
#       entity_id: device_tracker.google_maps_118405357218131797203
#       from: 'home'
#       to: 'not_home'
#     - platform: sun
#       event: sunset
#       offset: "+00:30:00"
#     - platform: event
#       event_type: event_simulate_presence
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: 'sun.sun'
#         state: 'below_horizon'
#       # Randomise when the lights all turn off
#       - condition: time
#         before: '23:55:00'
#         #dont work: before: '23:{{ (range(01, 59) | random) }}:00'
#       - condition: state
#         entity_id: group.all_devices
#         state: 'not_home'
#       # Check we are enabled
#       - condition: state
#         entity_id: input_boolean.simulate_presence_enable
#         state: 'on'
#   action:
#     - service: light.turn_on
#     # Choose a lamp at random (between 1 and 3 (Set as 1-4)) and turn it on.
#       data_template:
#          entity_id: >
#            light.lamp_{{ (range(1, 4) | random) }}
#     # Keep lamp on for xx minutes)
#     - delay: '00:{{ (range(10, 30) | random) }}:00'
#     - service: light.turn_on
#     # Choose a lamp at random (between 1 and 3 (Set as 1-4)) and turn it on.
#       data_template:
#          entity_id: >
#            light.lamp_{{ (range(1, 4) | random) }}
#     # Keep lamp on for xx minutes)
#     - delay: '00:{{ (range(10, 30) | random) }}:00'
#
#     # turn off all lamps
#     - service: light.turn_off
#       entity_id:
#         - light.lamp_1
#         - light.lamp_2
#         - light.lamp_3
#     # wait a a few seconds before turning on another lamp
#     - delay: '00:00:{{ (range(3, 10) | random) }}'
#     # generate an event to call again this automation rule
#     - event: event_simulate_presence
